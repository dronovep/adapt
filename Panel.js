/*
Конкретный адаптивный элемент - Панель, хоть сама в нашем простом примере и не имеет классов адаптации,
однако она действующий элемент адаптивного дерева и прокидывает адаптивную логику в дочерний элемент Punct
Убирать из дерева этот элемент нельзя, смотрите стили связанные с ней в mstyle.css и поймете о чем речь. Panel все равно адаптируется - ее адаптирует ее родитель Body,
но у нее самой нет детей, которые бы зависели от ее ширины - поэтому и нет классов адаптации.

Да, вы можете сказать, что у нее в дочерних есть Punct - но он адаптирует своих детей
на основании уже своей ширины, а не Panel, он указан в ней ребенком, так как физически с точки зрения HTML DOM он ее ребенок и к нему нужно прокинуть адаптивную логику

Адаптивная логика идет по принципу от родителя к детям:  изменилась ширина родителя - мог поменяться его класс адаптации -
и тут как раз важнейший момент - класс адаптации будет задавать новый стиль ширины для его дочернего элемента, а не для него самого (иначе адаптация бы зациклилась)
*/
function Panel(element) {
    AdaptiveElement.call(this, element);
}

Panel.prototype = Object.create(AdaptiveElement.prototype);
Panel.prototype.selector        = '.panel';
Panel.prototype.childtypes = [Punct];
Panel.prototype.adaptation = {
    stepsize: 0,
    styleclasses: []
};


//AdaptiveView.prototype.validate();